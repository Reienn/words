{"version":3,"sources":["components/poems-list.component.tsx","components/poem.component.tsx","firebase.ts","services/poems.service.ts","routing.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PoemsList","poems","className","id","map","el","i","to","slug","title","Poem","useParams","poemIndex","findIndex","poem","next","length","prev","style","backgroundImage","image","dangerouslySetInnerHTML","__html","sanitizeHtml","content","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","a","_init","db","firestore","collection","orderBy","get","querySnapshot","docs","doc","data","Routing","useState","setPoems","useEffect","getPoems","then","exact","path","children","App","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97ab22ae.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PoemData } from '../models/poem.data';\n\ninterface PoemsProps {\n  poems: PoemData[]\n}\nconst PoemsList: FC<PoemsProps> = ({poems}) => {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"left-side\">\n        <h1 id=\"header\">Słowa</h1>\n      </div>\n      <div className=\"right-side\">\n        <div id=\"main\">\n          <div id=\"content\">\n            <ul>\n              {poems?.map((el, i) => (<li key={i}><Link to={'/words/'+el.slug}>{el.title}</Link></li>))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PoemsList;","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { PoemData } from '../models/poem.data';\nimport sanitizeHtml from 'sanitize-html';\n\ninterface PoemProps {\n  poems: PoemData[]\n}\n\nconst Poem: FC<PoemProps> = ({ poems }) => {\n  const { slug } = useParams() as { slug: string };\n  const poemIndex = poems.findIndex(el => el.slug === slug);\n  const poem = poems[poemIndex];\n  const next = poems[poemIndex < poems.length - 1 ? poemIndex + 1 : 0];\n  const prev = poems[poemIndex > 0 ? poemIndex - 1 : poems.length - 1];\n\n  return (\n    <>{\n      poem &&\n      <>\n        <div className=\"left-side\">\n          <div className=\"home-link\"><Link to={'/words'}>słowa</Link></div>\n          <h2 id=\"header\">{poem.title}</h2>\n          <div className=\"poem-image\" style={{ backgroundImage: `url(${poem.image})` }}></div>\n        </div>\n        <div className=\"right-side\">\n          <div id=\"main\">\n            <div id=\"content\">\n              <div className=\"poem-text\" dangerouslySetInnerHTML={{ __html: sanitizeHtml(poem.content) }}></div>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <Link to={'/words/' + (prev?.slug)} title={prev.title} className=\"button\"> &#8249; </Link>\n            <span>{poemIndex + 1}</span>\n            <Link to={'/words/' + (next?.slug)} title={next.title} className=\"button\"> &#8250; </Link>\n          </div>\n        </div>\n      </>\n    }</>\n  );\n}\n\nexport default Poem;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_DB,\n  projectId: process.env.REACT_APP_PID,\n  storageBucket: process.env.REACT_APP_SB,\n  messagingSenderId: process.env.REACT_APP_SID,\n  appId: process.env.REACT_APP_APPID\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import firebase from '../firebase';\nimport { PoemData } from '../models/poem.data';\n\nlet poems: PoemData[];\n\nexport async function get(): Promise<PoemData[]> {\n  if (!poems) {\n    await _init();\n  }\n  return poems;\n}\n\nexport async function fetch(id: string): Promise<PoemData | null> {\n  if (!poems) {\n    await _init();\n  }\n  return poems?.find(el => el.id === id) || null;\n}\n\nasync function _init() {\n  const db = firebase.firestore();\n  const querySnapshot = await db.collection('poems').orderBy('created', 'desc').get();\n  poems = querySnapshot?.docs.map((doc) => ({id: doc.id, ...doc.data()} as PoemData));\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Poems from './components/poems-list.component';\nimport Poem from './components/poem.component';\nimport { useEffect, useState } from 'react';\nimport { PoemData } from './models/poem.data';\nimport { get as getPoems } from './services/poems.service';\n\nexport default function Routing() {\n  const [poems, setPoems] = useState<PoemData[]>([]);\n\n  useEffect(() => {\n    getPoems().then(setPoems);\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/words\"><Poems poems={poems} /></Route>\n        <Route exact path=\"/words/:slug\" children={<Poem poems={poems} />} />\n      </Switch>\n    </Router>\n  );\n}","import React from 'react';\nimport './App.scss';\nimport Routing from './routing';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Routing />\n      <div id=\"footer\">\n        &copy;2021 <a href=\"https://www.facebook.com/anna.m.jankowicz\" target=\"_blank\" rel=\"noreferrer\">Anna Jankowicz</a>.\n        Grafiki: <a href=\"https://www.flickr.com/photos/biodivlibrary/\" target=\"_blank\" rel=\"noreferrer\">BHL</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}