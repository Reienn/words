{"version":3,"sources":["models/entry.data.ts","components/entries-list.component.tsx","components/entry.component.tsx","firebase.ts","services/entries.service.ts","components/edit-entry.component.tsx","components/edit-list.component.tsx","routing.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EntryType","EntriesList","entries","poems","stories","forEach","entry","type","Poem","push","Story","className","id","style","backgroundImage","map","el","i","to","slug","title","Entry","useParams","entryIndex","findIndex","next","length","prev","image","dangerouslySetInnerHTML","__html","sanitizeHtml","content","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","get","a","cache","_init","getEntries","save","collection","doc","update","newEntry","created","firestore","FieldValue","serverTimestamp","set","remove","delete","orderBy","querySnapshot","docs","data","sort","b","localeCompare","EditEntry","changed","useState","formData","setFormData","collapsed","setCollapsed","onChange","value","field","onSave","onRemove","window","confirm","onClick","e","stopPropagation","target","split","join","disabled","selected","auth","EditList","login","setLogin","password","setPassword","user","setUser","editEntries","setEditEntries","onAuthStateChanged","currentUser","useEffect","signInWithEmailAndPassword","_","signOut","Routing","setEntries","getData","then","res","exact","path","children","App","Date","getFullYear","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7499bf5f.chunk.js","sourcesContent":["export enum EntryType {\n  Poem = 'poem',\n  Story = 'story'\n}\n\nexport interface EntryData {\n  id: string;\n  slug: string;\n  title: string;\n  content: string;\n  created: string;\n  image: string;\n  type: EntryType;\n}","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { EntryData, EntryType } from '../models/entry.data';\n\ninterface EntriesListProps {\n  entries: EntryData[]\n}\nconst EntriesList: FC<EntriesListProps> = ({entries}) => {\n  const poems: EntryData[] = [];\n  const stories: EntryData[] = [];\n\n  entries.forEach(entry => {\n    switch (entry.type) {\n      case EntryType.Poem:\n        poems.push(entry);\n        break;\n      case EntryType.Story:\n        stories.push(entry);\n        break;\n      default:\n        break;\n    }\n  })\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"left-side\">\n        <h1 id=\"header\">Słowa</h1>\n        <div className=\"entry-image\" style={{ backgroundImage: `url(https://live.staticflickr.com/8459/7995927080_2d64aa9088_c.jpg)` }}></div>\n      </div>\n      <div className=\"right-side\">\n        <div id=\"main\">\n          <div id=\"content\">\n            <h2>Poezja</h2>\n            <ul>\n              {poems?.map((el, i) => (<li key={i}><Link to={'/'+el.slug}>{el.title}</Link></li>))}\n            </ul>\n            <h2>Proza</h2>\n            <ul>\n              {stories?.map((el, i) => (<li key={i}><Link to={'/'+el.slug}>{el.title}</Link></li>))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EntriesList;","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { EntryData } from '../models/entry.data';\nimport sanitizeHtml from 'sanitize-html';\n\ninterface EntryProps {\n  entries: EntryData[]\n}\n\nconst Entry: FC<EntryProps> = ({ entries }) => {\n  const { slug } = useParams() as { slug: string };\n  const entryIndex = entries.findIndex(el => el.slug === slug);\n  const entry = entries[entryIndex];\n  const next = entries[entryIndex < entries.length - 1 ? entryIndex + 1 : 0];\n  const prev = entries[entryIndex > 0 ? entryIndex - 1 : entries.length - 1];\n\n  return (\n    <>{\n      entry &&\n      <>\n        <div className=\"left-side\">\n          <div className=\"home-link\"><Link to={'/'}>słowa</Link></div>\n          <h2 id=\"header\">{entry.title}</h2>\n          <div className=\"entry-image\" style={{ backgroundImage: `url(${entry.image})` }}></div>\n        </div>\n        <div className=\"right-side\">\n          <div id=\"main\">\n            <div id=\"content\">\n              <div className=\"entry-text\" dangerouslySetInnerHTML={{ __html: sanitizeHtml(entry.content) }}></div>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <Link to={'/' + (prev?.slug)} title={prev.title} className=\"button\"> &#8249; </Link>\n            <span>{entryIndex + 1}</span>\n            <Link to={'/' + (next?.slug)} title={next.title} className=\"button\"> &#8250; </Link>\n          </div>\n        </div>\n      </>\n    }</>\n  );\n}\n\nexport default Entry;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_DB,\n  projectId: process.env.REACT_APP_PID,\n  storageBucket: process.env.REACT_APP_SB,\n  messagingSenderId: process.env.REACT_APP_SID,\n  appId: process.env.REACT_APP_APPID\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import firebase from '../firebase';\nimport { EntryData } from '../models/entry.data';\n\nlet db: firebase.firestore.Firestore;\nlet entries: EntryData[];\n\nexport async function get(cache = true): Promise<EntryData[]> {\n  if (!entries) {\n    await _init();\n  }\n  if (!cache) {\n    await getEntries();\n  }\n  return entries;\n}\n\nexport async function fetch(id: string): Promise<EntryData | null> {\n  if (!entries) {\n    await _init();\n  }\n  return entries?.find(el => el.id === id) || null;\n}\n\nexport async function save(entry: Partial<EntryData>): Promise<void> {\n  if (!db) {\n    await _init();\n  }\n  if (entry.id) {\n    return db.collection('poems').doc(entry.id).update(entry);\n  }\n  const newEntry = {\n    created: firebase.firestore.FieldValue.serverTimestamp(),\n    ...entry\n  };\n  return db.collection('poems').doc().set(newEntry);\n}\n\nexport async function remove(id: string): Promise<void> {\n  if (!id) { return; }\n  if (!db) {\n    await _init();\n  }\n  return db.collection('poems').doc(id).delete();\n}\n\nasync function _init() {\n  db = firebase.firestore();\n  await getEntries();\n}\n\nasync function getEntries() {\n  const querySnapshot = await db.collection('poems').orderBy('created', 'desc').get();\n  entries = querySnapshot?.docs.map((doc) => ({id: doc.id, ...doc.data()} as EntryData)).sort((a, b) => a.type.localeCompare(b.type));\n}\n","import { ChangeEvent, FC, MouseEventHandler, useState } from 'react';\nimport { EntryData } from '../models/entry.data';\nimport { save, remove } from '../services/entries.service';\n\ninterface EditEntryProps {\n  entry: Partial<EntryData>,\n  changed: () => void,\n}\nconst EditEntry: FC<EditEntryProps> = ({ entry, changed }) => {\n  const [formData, setFormData] = useState<Partial<EntryData>>(entry);\n  const [collapsed, setCollapsed] = useState(true);\n\n  const onChange = (value: string, field: keyof EntryData) => {\n    setFormData({ ...formData, [field]: value });\n  }\n\n  const onSave = async () => {\n    await save(formData);\n    if (!formData.id) {\n      setCollapsed(true);\n      setFormData({});\n    }\n    changed();\n  }\n\n  const onRemove = async () => {\n    if (!formData.id) { return; }\n    if (window.confirm('Czy na pewno?')) {\n      await remove(formData.id);\n      changed();\n    }\n  }\n\n  return (\n    <>\n      <h3 className={`edit-title ${!formData.id ? 'add-title' : ''}`} onClick={() => setCollapsed(!collapsed)}>\n        <span className={`arrow-icon ${collapsed ? 'right' : 'down'}`}/>\n        {formData.title || 'Dodaj nowy'}\n        {formData.id && <button className=\"removeButton\" onClick={e => {e.stopPropagation(); onRemove();}}>Usuń</button>}\n      </h3>\n      {!collapsed && <div className=\"entry-form\">\n        <div>\n          <label>Tytuł: </label>\n          <input type=\"text\" value={formData.title} onChange={e => onChange(e.target.value, 'title')} />\n        </div>\n        <div>\n          <label>Slug: </label>\n          <input type=\"text\" value={formData.slug} onChange={e => onChange(e.target.value, 'slug')} />\n        </div>\n        <div>\n          <label>Treść: </label>\n          <textarea value={formData.content?.split('<br>').join('\\n')} onChange={e =>\n            onChange(e.target.value?.split('\\n').join('<br>'), 'content')} />\n        </div>\n        <div>\n          <label>Grafika: </label>\n          <input type=\"text\" value={formData.image} onChange={e => onChange(e.target.value, 'image')} />\n        </div>\n        <div>\n          <label>Typ: </label>\n          <select onChange={e => onChange(e.target.value, 'type')}>\n            <option disabled selected> </option>\n            <option value=\"poem\" selected={formData.type === 'poem'}>Wiersz</option>\n            <option value=\"story\" selected={formData.type === 'story'}>Proza</option>\n          </select>\n        </div>\n        <div className=\"save-button\">\n          <button onClick={onSave}>{entry.id ? 'Zapisz' : 'Dodaj'}</button>\n        </div>\n      </div>}\n    </>\n  );\n}\n\nexport default EditEntry;","import { FC, useEffect, useState } from 'react';\nimport { EntryData } from '../models/entry.data';\nimport EditEntry from './edit-entry.component';\nimport firebase from '../firebase';\n\nconst auth = firebase.auth();\n\ninterface EditListProps {\n  entries: EntryData[],\n  changed: () => void,\n}\nconst EditList: FC<EditListProps> = ({ entries, changed }) => {\n  const [login, setLogin] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const [user, setUser] = useState<firebase.User | null>();\n  const [editEntries, setEditEntries] = useState<(Partial<EntryData>)[]>([]);\n\n  auth.onAuthStateChanged((currentUser) => {\n    setUser(currentUser);\n  });\n\n  useEffect(() => {\n    entries && setEditEntries([{}, ...entries]);\n  }, [entries])\n\n  const signIn = () => {\n    if (!(login && password)) { return; }\n    try {\n      auth.signInWithEmailAndPassword(login, password);\n    } catch (_) { }\n  };\n\n  const signOut = () => {\n    auth.signOut();\n  };\n\n  return (\n    <div className=\"editor\">\n      {!user && <div className=\"login-form\">\n        <div>\n          <label>Login:</label> <input type=\"text\" onChange={e => setLogin(e.target.value)} />\n        </div>\n        <div>\n          <label>Hasło:</label> <input type=\"password\" onChange={e => setPassword(e.target.value)} />\n        </div>\n        <button onClick={signIn}>Login</button>\n      </div>}\n      {user && <>\n        <h2>Edytor</h2>\n        <button className=\"logout-button\" onClick={signOut}>Wyloguj</button>\n        <ul>\n          {editEntries.map((el, i) => (\n            <li key={el.id || i}>\n              <EditEntry entry={el} changed={changed} />\n            </li>))}\n        </ul>\n      </>\n      }\n    </div>\n  );\n}\n\nexport default EditList;","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Entries from './components/entries-list.component';\nimport Entry from './components/entry.component';\nimport { useEffect, useState } from 'react';\nimport { EntryData } from './models/entry.data';\nimport { get as getEntries } from './services/entries.service';\nimport EditList from './components/edit-list.component';\n\nexport default function Routing() {\n  const [entries, setEntries] = useState<EntryData[]>([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = (cache = true) => {\n    getEntries(cache).then(res => setEntries([...res]));\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/edit\"><EditList entries={entries} changed={() => getData(false)} /></Route>\n        <Route exact path=\"/\"><Entries entries={entries} /></Route>\n        <Route exact path=\"/:slug\" children={<Entry entries={entries} />} />\n      </Switch>\n    </Router>\n  );\n}","import React from 'react';\nimport './App.scss';\nimport Routing from './routing';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Routing />\n      <div id=\"footer\">\n        &copy;{new Date().getFullYear()} <a href=\"https://www.facebook.com/anna.chotoborska\" target=\"_blank\" rel=\"noreferrer\">Reien</a>.\n        Grafiki: <a href=\"https://www.flickr.com/photos/biodivlibrary/\" target=\"_blank\" rel=\"noreferrer\">BHL</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}